openapi: 3.0.3
info:
  title: "Radio School Backend API"
  description: "Radio School Bacakend API"
  version: "1.0.0"
  contact:
    name: "Tectitan"
    email: "dexter_daniel@outlook.com"

servers:
  - url: /api/1.0
    description: Dev Server
  - url: /uat/api/1.0
    description: UAT Server

paths:
  /generate-access-code:
    get:
      operationId: "backend_app.public_web.access_code_apis.generate_access_code"
      tags:
        - "Public Web"
      summary: "Generate access code for the Radio School public web"
      responses:
        "200":
          description: "Access Code"
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_code:
                    type: string
                    example: 1ERY09

  /generate-tokens:
    post:
      operationId: "backend_app.public_web.access_code_apis.generate_tokens"
      tags:
        - "Public Web"
      summary: "Generate access and refresh tokens for accessing the Radio School public web"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_code:
                  type: string
                  minimum: 6
                  maximum: 6
                  example: 1ERY09
      responses:
        "200":
          description: "Access and Refresh Tokens"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                        example: eyJ0eXAiOiJKV1QiLCJhbGciOi....akqrpzekGCE2uVtmVpGAU3hquxs3zJCYg27JHKY6EcDhRw
                      refresh_token:
                        type: string
                        example:  eyJ0eXAiOiJKV1QiLCJhbGciOi....akqrpzekGCE2uVtmVpGAU3hquxs3zJCYg27JHKY6EcDhRw
        "422":
          description: "Failed request body validation"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'

  /verify-token:
    post:
      operationId: "backend_app.public_web.access_code_apis.verify_token"
      tags:
        - "Public Web"
      summary: "Token Verification"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  example: eyJ0eXAiOiJKV1QiLCJhbGciOi....akqrpzekGCE2uVtmVpGAU3hquxs3zJCYg27JHKY6EcDhRw
      responses:
        "200":
          description: "Token Verification"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      token_isvalid:
                        type: boolean
                        example: true
        "422":
          description: "Failed request body validation"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'

  /refresh-token:
    post:
      operationId: "backend_app.public_web.access_code_apis.refresh_token"
      tags:
        - "Public Web"
      summary: "Refresh all Tokens"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  example: eyJ0eXAiOiJKV1QiLCJhbGciOi....akqrpzekGCE2uVtmVpGAU3hquxs3zJCYg27JHKY6EcDhRw
                refresh_token:
                  type: string
                  example: eyJ0eXAiOiJKV1QiLCJhbGciOi....akqrpzekGCE2uVtmVpGAU3hquxs3zJCYg27JHKY6EcDhRw
      responses:
        "200":
          description: "Refreshed Tokens"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      access_token:
                        type: string
                        example: eyJ0eXAiOiJKV1QiLCJhbGciOi....akqrpzekGCE2uVtmVpGAU3hquxs3zJCYg27JHKY6EcDhRw
                      refresh_token:
                        type: string
                        example: eyJ0eXAiOiJKV1QiLCJhbGciOi....akqrpzekGCE2uVtmVpGAU3hquxs3zJCYg27JHKY6EcDhRw
        "422":
          description: "Failed request body validation"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors'
                
components:
  schemas:
    Errors:
      type: object
      properties:
        status:
          type: string
          example: success
        code:
          type: integer
          example: 20
        message:
          type: string
          example: Request body validation failed

  parameters:
    lname:
      name: "lname"
      description: "Last name of the person to get"
      in: path
      required: True
      schema:
        type: "string"